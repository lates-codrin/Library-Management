### YamlMime:ManagedReference
items:
- uid: Library_Management_System.BusinessLogic.LibraryManager
  commentId: T:Library_Management_System.BusinessLogic.LibraryManager
  id: LibraryManager
  parent: Library_Management_System.BusinessLogic
  children:
  - Library_Management_System.BusinessLogic.LibraryManager.#ctor(Library_Management_System.Data.IBookRepository)
  - Library_Management_System.BusinessLogic.LibraryManager.AddBook(Library_Management_System.Models.Book)
  - Library_Management_System.BusinessLogic.LibraryManager.CanLendBook(Library_Management_System.Models.Book)
  - Library_Management_System.BusinessLogic.LibraryManager.CanReturnBook(Library_Management_System.Models.LendBook)
  - Library_Management_System.BusinessLogic.LibraryManager.DeleteBook(Library_Management_System.Models.Book)
  - Library_Management_System.BusinessLogic.LibraryManager.GetAvailableQuantity(Library_Management_System.Models.Book)
  - Library_Management_System.BusinessLogic.LibraryManager.GetBooks
  - Library_Management_System.BusinessLogic.LibraryManager.GetBooksBySearchAsync(System.String,System.Int32,System.Int32)
  - Library_Management_System.BusinessLogic.LibraryManager.OnPropertyChanged(System.String)
  - Library_Management_System.BusinessLogic.LibraryManager.PropertyChanged
  - Library_Management_System.BusinessLogic.LibraryManager.SearchBooks(System.String)
  - Library_Management_System.BusinessLogic.LibraryManager.UpdateBook(Library_Management_System.Models.Book)
  langs:
  - csharp
  - vb
  name: LibraryManager
  nameWithType: LibraryManager
  fullName: Library_Management_System.BusinessLogic.LibraryManager
  type: Class
  source:
    remote:
      path: Library Management System/BusinessLogic/LibraryManager.cs
      branch: master
      repo: https://github.com/lates-codrin/Library-Management.git
    id: LibraryManager
    path: Library Management System/BusinessLogic/LibraryManager.cs
    startLine: 12
  assemblies:
  - Library Management System
  namespace: Library_Management_System.BusinessLogic
  syntax:
    content: public class LibraryManager
    content.vb: Public Class LibraryManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Library_Management_System.BusinessLogic.LibraryManager.#ctor(Library_Management_System.Data.IBookRepository)
  commentId: M:Library_Management_System.BusinessLogic.LibraryManager.#ctor(Library_Management_System.Data.IBookRepository)
  id: '#ctor(Library_Management_System.Data.IBookRepository)'
  parent: Library_Management_System.BusinessLogic.LibraryManager
  langs:
  - csharp
  - vb
  name: LibraryManager(IBookRepository)
  nameWithType: LibraryManager.LibraryManager(IBookRepository)
  fullName: Library_Management_System.BusinessLogic.LibraryManager.LibraryManager(Library_Management_System.Data.IBookRepository)
  type: Constructor
  source:
    remote:
      path: Library Management System/BusinessLogic/LibraryManager.cs
      branch: master
      repo: https://github.com/lates-codrin/Library-Management.git
    id: .ctor
    path: Library Management System/BusinessLogic/LibraryManager.cs
    startLine: 20
  assemblies:
  - Library Management System
  namespace: Library_Management_System.BusinessLogic
  summary: Initializes a new instance of the <xref href="Library_Management_System.BusinessLogic.LibraryManager" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public LibraryManager(IBookRepository bookRepo)
    parameters:
    - id: bookRepo
      type: Library_Management_System.Data.IBookRepository
      description: The book repository to operate on.
    content.vb: Public Sub New(bookRepo As IBookRepository)
  overload: Library_Management_System.BusinessLogic.LibraryManager.#ctor*
  nameWithType.vb: LibraryManager.New(IBookRepository)
  fullName.vb: Library_Management_System.BusinessLogic.LibraryManager.New(Library_Management_System.Data.IBookRepository)
  name.vb: New(IBookRepository)
- uid: Library_Management_System.BusinessLogic.LibraryManager.GetBooks
  commentId: M:Library_Management_System.BusinessLogic.LibraryManager.GetBooks
  id: GetBooks
  parent: Library_Management_System.BusinessLogic.LibraryManager
  langs:
  - csharp
  - vb
  name: GetBooks()
  nameWithType: LibraryManager.GetBooks()
  fullName: Library_Management_System.BusinessLogic.LibraryManager.GetBooks()
  type: Method
  source:
    remote:
      path: Library Management System/BusinessLogic/LibraryManager.cs
      branch: master
      repo: https://github.com/lates-codrin/Library-Management.git
    id: GetBooks
    path: Library Management System/BusinessLogic/LibraryManager.cs
    startLine: 28
  assemblies:
  - Library Management System
  namespace: Library_Management_System.BusinessLogic
  summary: Retrieves all books from the repository.
  example: []
  syntax:
    content: public IEnumerable<Book> GetBooks()
    return:
      type: System.Collections.Generic.IEnumerable{Library_Management_System.Models.Book}
    content.vb: Public Function GetBooks() As IEnumerable(Of Book)
  overload: Library_Management_System.BusinessLogic.LibraryManager.GetBooks*
- uid: Library_Management_System.BusinessLogic.LibraryManager.AddBook(Library_Management_System.Models.Book)
  commentId: M:Library_Management_System.BusinessLogic.LibraryManager.AddBook(Library_Management_System.Models.Book)
  id: AddBook(Library_Management_System.Models.Book)
  parent: Library_Management_System.BusinessLogic.LibraryManager
  langs:
  - csharp
  - vb
  name: AddBook(Book)
  nameWithType: LibraryManager.AddBook(Book)
  fullName: Library_Management_System.BusinessLogic.LibraryManager.AddBook(Library_Management_System.Models.Book)
  type: Method
  source:
    remote:
      path: Library Management System/BusinessLogic/LibraryManager.cs
      branch: master
      repo: https://github.com/lates-codrin/Library-Management.git
    id: AddBook
    path: Library Management System/BusinessLogic/LibraryManager.cs
    startLine: 33
  assemblies:
  - Library Management System
  namespace: Library_Management_System.BusinessLogic
  summary: Adds a new book to the repository.
  example: []
  syntax:
    content: public void AddBook(Book book)
    parameters:
    - id: book
      type: Library_Management_System.Models.Book
    content.vb: Public Sub AddBook(book As Book)
  overload: Library_Management_System.BusinessLogic.LibraryManager.AddBook*
- uid: Library_Management_System.BusinessLogic.LibraryManager.UpdateBook(Library_Management_System.Models.Book)
  commentId: M:Library_Management_System.BusinessLogic.LibraryManager.UpdateBook(Library_Management_System.Models.Book)
  id: UpdateBook(Library_Management_System.Models.Book)
  parent: Library_Management_System.BusinessLogic.LibraryManager
  langs:
  - csharp
  - vb
  name: UpdateBook(Book)
  nameWithType: LibraryManager.UpdateBook(Book)
  fullName: Library_Management_System.BusinessLogic.LibraryManager.UpdateBook(Library_Management_System.Models.Book)
  type: Method
  source:
    remote:
      path: Library Management System/BusinessLogic/LibraryManager.cs
      branch: master
      repo: https://github.com/lates-codrin/Library-Management.git
    id: UpdateBook
    path: Library Management System/BusinessLogic/LibraryManager.cs
    startLine: 38
  assemblies:
  - Library Management System
  namespace: Library_Management_System.BusinessLogic
  summary: Updates an existing book in the repository.
  example: []
  syntax:
    content: public void UpdateBook(Book book)
    parameters:
    - id: book
      type: Library_Management_System.Models.Book
    content.vb: Public Sub UpdateBook(book As Book)
  overload: Library_Management_System.BusinessLogic.LibraryManager.UpdateBook*
- uid: Library_Management_System.BusinessLogic.LibraryManager.DeleteBook(Library_Management_System.Models.Book)
  commentId: M:Library_Management_System.BusinessLogic.LibraryManager.DeleteBook(Library_Management_System.Models.Book)
  id: DeleteBook(Library_Management_System.Models.Book)
  parent: Library_Management_System.BusinessLogic.LibraryManager
  langs:
  - csharp
  - vb
  name: DeleteBook(Book)
  nameWithType: LibraryManager.DeleteBook(Book)
  fullName: Library_Management_System.BusinessLogic.LibraryManager.DeleteBook(Library_Management_System.Models.Book)
  type: Method
  source:
    remote:
      path: Library Management System/BusinessLogic/LibraryManager.cs
      branch: master
      repo: https://github.com/lates-codrin/Library-Management.git
    id: DeleteBook
    path: Library Management System/BusinessLogic/LibraryManager.cs
    startLine: 43
  assemblies:
  - Library Management System
  namespace: Library_Management_System.BusinessLogic
  summary: Deletes a book from the repository.
  example: []
  syntax:
    content: public void DeleteBook(Book book)
    parameters:
    - id: book
      type: Library_Management_System.Models.Book
    content.vb: Public Sub DeleteBook(book As Book)
  overload: Library_Management_System.BusinessLogic.LibraryManager.DeleteBook*
- uid: Library_Management_System.BusinessLogic.LibraryManager.SearchBooks(System.String)
  commentId: M:Library_Management_System.BusinessLogic.LibraryManager.SearchBooks(System.String)
  id: SearchBooks(System.String)
  parent: Library_Management_System.BusinessLogic.LibraryManager
  langs:
  - csharp
  - vb
  name: SearchBooks(string)
  nameWithType: LibraryManager.SearchBooks(string)
  fullName: Library_Management_System.BusinessLogic.LibraryManager.SearchBooks(string)
  type: Method
  source:
    remote:
      path: Library Management System/BusinessLogic/LibraryManager.cs
      branch: master
      repo: https://github.com/lates-codrin/Library-Management.git
    id: SearchBooks
    path: Library Management System/BusinessLogic/LibraryManager.cs
    startLine: 48
  assemblies:
  - Library Management System
  namespace: Library_Management_System.BusinessLogic
  summary: Searches books by title or author.
  example: []
  syntax:
    content: public IEnumerable<Book> SearchBooks(string query)
    parameters:
    - id: query
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{Library_Management_System.Models.Book}
    content.vb: Public Function SearchBooks(query As String) As IEnumerable(Of Book)
  overload: Library_Management_System.BusinessLogic.LibraryManager.SearchBooks*
  nameWithType.vb: LibraryManager.SearchBooks(String)
  fullName.vb: Library_Management_System.BusinessLogic.LibraryManager.SearchBooks(String)
  name.vb: SearchBooks(String)
- uid: Library_Management_System.BusinessLogic.LibraryManager.GetBooksBySearchAsync(System.String,System.Int32,System.Int32)
  commentId: M:Library_Management_System.BusinessLogic.LibraryManager.GetBooksBySearchAsync(System.String,System.Int32,System.Int32)
  id: GetBooksBySearchAsync(System.String,System.Int32,System.Int32)
  parent: Library_Management_System.BusinessLogic.LibraryManager
  langs:
  - csharp
  - vb
  name: GetBooksBySearchAsync(string, int, int)
  nameWithType: LibraryManager.GetBooksBySearchAsync(string, int, int)
  fullName: Library_Management_System.BusinessLogic.LibraryManager.GetBooksBySearchAsync(string, int, int)
  type: Method
  source:
    remote:
      path: Library Management System/BusinessLogic/LibraryManager.cs
      branch: master
      repo: https://github.com/lates-codrin/Library-Management.git
    id: GetBooksBySearchAsync
    path: Library Management System/BusinessLogic/LibraryManager.cs
    startLine: 59
  assemblies:
  - Library Management System
  namespace: Library_Management_System.BusinessLogic
  summary: Retrieves books by search query with pagination.
  example: []
  syntax:
    content: public Task<IEnumerable<Book>> GetBooksBySearchAsync(string searchQuery, int pageNumber, int pageSize)
    parameters:
    - id: searchQuery
      type: System.String
    - id: pageNumber
      type: System.Int32
    - id: pageSize
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Library_Management_System.Models.Book}}
    content.vb: Public Function GetBooksBySearchAsync(searchQuery As String, pageNumber As Integer, pageSize As Integer) As Task(Of IEnumerable(Of Book))
  overload: Library_Management_System.BusinessLogic.LibraryManager.GetBooksBySearchAsync*
  nameWithType.vb: LibraryManager.GetBooksBySearchAsync(String, Integer, Integer)
  fullName.vb: Library_Management_System.BusinessLogic.LibraryManager.GetBooksBySearchAsync(String, Integer, Integer)
  name.vb: GetBooksBySearchAsync(String, Integer, Integer)
- uid: Library_Management_System.BusinessLogic.LibraryManager.PropertyChanged
  commentId: E:Library_Management_System.BusinessLogic.LibraryManager.PropertyChanged
  id: PropertyChanged
  parent: Library_Management_System.BusinessLogic.LibraryManager
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: LibraryManager.PropertyChanged
  fullName: Library_Management_System.BusinessLogic.LibraryManager.PropertyChanged
  type: Event
  source:
    remote:
      path: Library Management System/BusinessLogic/LibraryManager.cs
      branch: master
      repo: https://github.com/lates-codrin/Library-Management.git
    id: PropertyChanged
    path: Library Management System/BusinessLogic/LibraryManager.cs
    startLine: 72
  assemblies:
  - Library Management System
  namespace: Library_Management_System.BusinessLogic
  syntax:
    content: public event PropertyChangedEventHandler PropertyChanged
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
    content.vb: Public Event PropertyChanged As PropertyChangedEventHandler
- uid: Library_Management_System.BusinessLogic.LibraryManager.OnPropertyChanged(System.String)
  commentId: M:Library_Management_System.BusinessLogic.LibraryManager.OnPropertyChanged(System.String)
  id: OnPropertyChanged(System.String)
  parent: Library_Management_System.BusinessLogic.LibraryManager
  langs:
  - csharp
  - vb
  name: OnPropertyChanged(string)
  nameWithType: LibraryManager.OnPropertyChanged(string)
  fullName: Library_Management_System.BusinessLogic.LibraryManager.OnPropertyChanged(string)
  type: Method
  source:
    remote:
      path: Library Management System/BusinessLogic/LibraryManager.cs
      branch: master
      repo: https://github.com/lates-codrin/Library-Management.git
    id: OnPropertyChanged
    path: Library Management System/BusinessLogic/LibraryManager.cs
    startLine: 77
  assemblies:
  - Library Management System
  namespace: Library_Management_System.BusinessLogic
  summary: Raises the <xref href="Library_Management_System.BusinessLogic.LibraryManager.PropertyChanged" data-throw-if-not-resolved="false"></xref> event.
  example: []
  syntax:
    content: protected virtual void OnPropertyChanged(string propertyName = null)
    parameters:
    - id: propertyName
      type: System.String
    content.vb: Protected Overridable Sub OnPropertyChanged(propertyName As String = Nothing)
  overload: Library_Management_System.BusinessLogic.LibraryManager.OnPropertyChanged*
  nameWithType.vb: LibraryManager.OnPropertyChanged(String)
  fullName.vb: Library_Management_System.BusinessLogic.LibraryManager.OnPropertyChanged(String)
  name.vb: OnPropertyChanged(String)
- uid: Library_Management_System.BusinessLogic.LibraryManager.CanLendBook(Library_Management_System.Models.Book)
  commentId: M:Library_Management_System.BusinessLogic.LibraryManager.CanLendBook(Library_Management_System.Models.Book)
  id: CanLendBook(Library_Management_System.Models.Book)
  parent: Library_Management_System.BusinessLogic.LibraryManager
  langs:
  - csharp
  - vb
  name: CanLendBook(Book)
  nameWithType: LibraryManager.CanLendBook(Book)
  fullName: Library_Management_System.BusinessLogic.LibraryManager.CanLendBook(Library_Management_System.Models.Book)
  type: Method
  source:
    remote:
      path: Library Management System/BusinessLogic/LibraryManager.cs
      branch: master
      repo: https://github.com/lates-codrin/Library-Management.git
    id: CanLendBook
    path: Library Management System/BusinessLogic/LibraryManager.cs
    startLine: 85
  assemblies:
  - Library Management System
  namespace: Library_Management_System.BusinessLogic
  summary: Determines if the book can be lent based on available quantity.
  example: []
  syntax:
    content: public bool CanLendBook(Book book)
    parameters:
    - id: book
      type: Library_Management_System.Models.Book
    return:
      type: System.Boolean
    content.vb: Public Function CanLendBook(book As Book) As Boolean
  overload: Library_Management_System.BusinessLogic.LibraryManager.CanLendBook*
- uid: Library_Management_System.BusinessLogic.LibraryManager.CanReturnBook(Library_Management_System.Models.LendBook)
  commentId: M:Library_Management_System.BusinessLogic.LibraryManager.CanReturnBook(Library_Management_System.Models.LendBook)
  id: CanReturnBook(Library_Management_System.Models.LendBook)
  parent: Library_Management_System.BusinessLogic.LibraryManager
  langs:
  - csharp
  - vb
  name: CanReturnBook(LendBook)
  nameWithType: LibraryManager.CanReturnBook(LendBook)
  fullName: Library_Management_System.BusinessLogic.LibraryManager.CanReturnBook(Library_Management_System.Models.LendBook)
  type: Method
  source:
    remote:
      path: Library Management System/BusinessLogic/LibraryManager.cs
      branch: master
      repo: https://github.com/lates-codrin/Library-Management.git
    id: CanReturnBook
    path: Library Management System/BusinessLogic/LibraryManager.cs
    startLine: 96
  assemblies:
  - Library Management System
  namespace: Library_Management_System.BusinessLogic
  summary: Determines if the book associated with the lend record can be returned.
  example: []
  syntax:
    content: public bool CanReturnBook(LendBook lendBook)
    parameters:
    - id: lendBook
      type: Library_Management_System.Models.LendBook
    return:
      type: System.Boolean
    content.vb: Public Function CanReturnBook(lendBook As LendBook) As Boolean
  overload: Library_Management_System.BusinessLogic.LibraryManager.CanReturnBook*
- uid: Library_Management_System.BusinessLogic.LibraryManager.GetAvailableQuantity(Library_Management_System.Models.Book)
  commentId: M:Library_Management_System.BusinessLogic.LibraryManager.GetAvailableQuantity(Library_Management_System.Models.Book)
  id: GetAvailableQuantity(Library_Management_System.Models.Book)
  parent: Library_Management_System.BusinessLogic.LibraryManager
  langs:
  - csharp
  - vb
  name: GetAvailableQuantity(Book)
  nameWithType: LibraryManager.GetAvailableQuantity(Book)
  fullName: Library_Management_System.BusinessLogic.LibraryManager.GetAvailableQuantity(Library_Management_System.Models.Book)
  type: Method
  source:
    remote:
      path: Library Management System/BusinessLogic/LibraryManager.cs
      branch: master
      repo: https://github.com/lates-codrin/Library-Management.git
    id: GetAvailableQuantity
    path: Library Management System/BusinessLogic/LibraryManager.cs
    startLine: 106
  assemblies:
  - Library Management System
  namespace: Library_Management_System.BusinessLogic
  summary: Gets the available quantity of the specified book.
  example: []
  syntax:
    content: public int GetAvailableQuantity(Book book)
    parameters:
    - id: book
      type: Library_Management_System.Models.Book
    return:
      type: System.Int32
    content.vb: Public Function GetAvailableQuantity(book As Book) As Integer
  overload: Library_Management_System.BusinessLogic.LibraryManager.GetAvailableQuantity*
references:
- uid: Library_Management_System.BusinessLogic
  commentId: N:Library_Management_System.BusinessLogic
  href: Library_Management_System.html
  name: Library_Management_System.BusinessLogic
  nameWithType: Library_Management_System.BusinessLogic
  fullName: Library_Management_System.BusinessLogic
  spec.csharp:
  - uid: Library_Management_System
    name: Library_Management_System
    href: Library_Management_System.html
  - name: .
  - uid: Library_Management_System.BusinessLogic
    name: BusinessLogic
    href: Library_Management_System.BusinessLogic.html
  spec.vb:
  - uid: Library_Management_System
    name: Library_Management_System
    href: Library_Management_System.html
  - name: .
  - uid: Library_Management_System.BusinessLogic
    name: BusinessLogic
    href: Library_Management_System.BusinessLogic.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Library_Management_System.BusinessLogic.LibraryManager
  commentId: T:Library_Management_System.BusinessLogic.LibraryManager
  parent: Library_Management_System.BusinessLogic
  href: Library_Management_System.BusinessLogic.LibraryManager.html
  name: LibraryManager
  nameWithType: LibraryManager
  fullName: Library_Management_System.BusinessLogic.LibraryManager
- uid: Library_Management_System.BusinessLogic.LibraryManager.#ctor*
  commentId: Overload:Library_Management_System.BusinessLogic.LibraryManager.#ctor
  href: Library_Management_System.BusinessLogic.LibraryManager.html#Library_Management_System_BusinessLogic_LibraryManager__ctor_Library_Management_System_Data_IBookRepository_
  name: LibraryManager
  nameWithType: LibraryManager.LibraryManager
  fullName: Library_Management_System.BusinessLogic.LibraryManager.LibraryManager
  nameWithType.vb: LibraryManager.New
  fullName.vb: Library_Management_System.BusinessLogic.LibraryManager.New
  name.vb: New
- uid: Library_Management_System.Data.IBookRepository
  commentId: T:Library_Management_System.Data.IBookRepository
  parent: Library_Management_System.Data
  href: Library_Management_System.Data.IBookRepository.html
  name: IBookRepository
  nameWithType: IBookRepository
  fullName: Library_Management_System.Data.IBookRepository
- uid: Library_Management_System.Data
  commentId: N:Library_Management_System.Data
  href: Library_Management_System.html
  name: Library_Management_System.Data
  nameWithType: Library_Management_System.Data
  fullName: Library_Management_System.Data
  spec.csharp:
  - uid: Library_Management_System
    name: Library_Management_System
    href: Library_Management_System.html
  - name: .
  - uid: Library_Management_System.Data
    name: Data
    href: Library_Management_System.Data.html
  spec.vb:
  - uid: Library_Management_System
    name: Library_Management_System
    href: Library_Management_System.html
  - name: .
  - uid: Library_Management_System.Data
    name: Data
    href: Library_Management_System.Data.html
- uid: Library_Management_System.BusinessLogic.LibraryManager.GetBooks*
  commentId: Overload:Library_Management_System.BusinessLogic.LibraryManager.GetBooks
  href: Library_Management_System.BusinessLogic.LibraryManager.html#Library_Management_System_BusinessLogic_LibraryManager_GetBooks
  name: GetBooks
  nameWithType: LibraryManager.GetBooks
  fullName: Library_Management_System.BusinessLogic.LibraryManager.GetBooks
- uid: System.Collections.Generic.IEnumerable{Library_Management_System.Models.Book}
  commentId: T:System.Collections.Generic.IEnumerable{Library_Management_System.Models.Book}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Book>
  nameWithType: IEnumerable<Book>
  fullName: System.Collections.Generic.IEnumerable<Library_Management_System.Models.Book>
  nameWithType.vb: IEnumerable(Of Book)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Library_Management_System.Models.Book)
  name.vb: IEnumerable(Of Book)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Library_Management_System.Models.Book
    name: Book
    href: Library_Management_System.Models.Book.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Library_Management_System.Models.Book
    name: Book
    href: Library_Management_System.Models.Book.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Library_Management_System.BusinessLogic.LibraryManager.AddBook*
  commentId: Overload:Library_Management_System.BusinessLogic.LibraryManager.AddBook
  href: Library_Management_System.BusinessLogic.LibraryManager.html#Library_Management_System_BusinessLogic_LibraryManager_AddBook_Library_Management_System_Models_Book_
  name: AddBook
  nameWithType: LibraryManager.AddBook
  fullName: Library_Management_System.BusinessLogic.LibraryManager.AddBook
- uid: Library_Management_System.Models.Book
  commentId: T:Library_Management_System.Models.Book
  parent: Library_Management_System.Models
  href: Library_Management_System.Models.Book.html
  name: Book
  nameWithType: Book
  fullName: Library_Management_System.Models.Book
- uid: Library_Management_System.Models
  commentId: N:Library_Management_System.Models
  href: Library_Management_System.html
  name: Library_Management_System.Models
  nameWithType: Library_Management_System.Models
  fullName: Library_Management_System.Models
  spec.csharp:
  - uid: Library_Management_System
    name: Library_Management_System
    href: Library_Management_System.html
  - name: .
  - uid: Library_Management_System.Models
    name: Models
    href: Library_Management_System.Models.html
  spec.vb:
  - uid: Library_Management_System
    name: Library_Management_System
    href: Library_Management_System.html
  - name: .
  - uid: Library_Management_System.Models
    name: Models
    href: Library_Management_System.Models.html
- uid: Library_Management_System.BusinessLogic.LibraryManager.UpdateBook*
  commentId: Overload:Library_Management_System.BusinessLogic.LibraryManager.UpdateBook
  href: Library_Management_System.BusinessLogic.LibraryManager.html#Library_Management_System_BusinessLogic_LibraryManager_UpdateBook_Library_Management_System_Models_Book_
  name: UpdateBook
  nameWithType: LibraryManager.UpdateBook
  fullName: Library_Management_System.BusinessLogic.LibraryManager.UpdateBook
- uid: Library_Management_System.BusinessLogic.LibraryManager.DeleteBook*
  commentId: Overload:Library_Management_System.BusinessLogic.LibraryManager.DeleteBook
  href: Library_Management_System.BusinessLogic.LibraryManager.html#Library_Management_System_BusinessLogic_LibraryManager_DeleteBook_Library_Management_System_Models_Book_
  name: DeleteBook
  nameWithType: LibraryManager.DeleteBook
  fullName: Library_Management_System.BusinessLogic.LibraryManager.DeleteBook
- uid: Library_Management_System.BusinessLogic.LibraryManager.SearchBooks*
  commentId: Overload:Library_Management_System.BusinessLogic.LibraryManager.SearchBooks
  href: Library_Management_System.BusinessLogic.LibraryManager.html#Library_Management_System_BusinessLogic_LibraryManager_SearchBooks_System_String_
  name: SearchBooks
  nameWithType: LibraryManager.SearchBooks
  fullName: Library_Management_System.BusinessLogic.LibraryManager.SearchBooks
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Library_Management_System.BusinessLogic.LibraryManager.GetBooksBySearchAsync*
  commentId: Overload:Library_Management_System.BusinessLogic.LibraryManager.GetBooksBySearchAsync
  href: Library_Management_System.BusinessLogic.LibraryManager.html#Library_Management_System_BusinessLogic_LibraryManager_GetBooksBySearchAsync_System_String_System_Int32_System_Int32_
  name: GetBooksBySearchAsync
  nameWithType: LibraryManager.GetBooksBySearchAsync
  fullName: Library_Management_System.BusinessLogic.LibraryManager.GetBooksBySearchAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Library_Management_System.Models.Book}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Library_Management_System.Models.Book}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<Book>>
  nameWithType: Task<IEnumerable<Book>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Library_Management_System.Models.Book>>
  nameWithType.vb: Task(Of IEnumerable(Of Book))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of Library_Management_System.Models.Book))
  name.vb: Task(Of IEnumerable(Of Book))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Library_Management_System.Models.Book
    name: Book
    href: Library_Management_System.Models.Book.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Library_Management_System.Models.Book
    name: Book
    href: Library_Management_System.Models.Book.html
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.ComponentModel.PropertyChangedEventHandler
  commentId: T:System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.propertychangedeventhandler
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
- uid: Library_Management_System.BusinessLogic.LibraryManager.PropertyChanged
  commentId: E:Library_Management_System.BusinessLogic.LibraryManager.PropertyChanged
  href: Library_Management_System.BusinessLogic.LibraryManager.html#Library_Management_System_BusinessLogic_LibraryManager_PropertyChanged
  name: PropertyChanged
  nameWithType: LibraryManager.PropertyChanged
  fullName: Library_Management_System.BusinessLogic.LibraryManager.PropertyChanged
- uid: Library_Management_System.BusinessLogic.LibraryManager.OnPropertyChanged*
  commentId: Overload:Library_Management_System.BusinessLogic.LibraryManager.OnPropertyChanged
  href: Library_Management_System.BusinessLogic.LibraryManager.html#Library_Management_System_BusinessLogic_LibraryManager_OnPropertyChanged_System_String_
  name: OnPropertyChanged
  nameWithType: LibraryManager.OnPropertyChanged
  fullName: Library_Management_System.BusinessLogic.LibraryManager.OnPropertyChanged
- uid: Library_Management_System.BusinessLogic.LibraryManager.CanLendBook*
  commentId: Overload:Library_Management_System.BusinessLogic.LibraryManager.CanLendBook
  href: Library_Management_System.BusinessLogic.LibraryManager.html#Library_Management_System_BusinessLogic_LibraryManager_CanLendBook_Library_Management_System_Models_Book_
  name: CanLendBook
  nameWithType: LibraryManager.CanLendBook
  fullName: Library_Management_System.BusinessLogic.LibraryManager.CanLendBook
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Library_Management_System.BusinessLogic.LibraryManager.CanReturnBook*
  commentId: Overload:Library_Management_System.BusinessLogic.LibraryManager.CanReturnBook
  href: Library_Management_System.BusinessLogic.LibraryManager.html#Library_Management_System_BusinessLogic_LibraryManager_CanReturnBook_Library_Management_System_Models_LendBook_
  name: CanReturnBook
  nameWithType: LibraryManager.CanReturnBook
  fullName: Library_Management_System.BusinessLogic.LibraryManager.CanReturnBook
- uid: Library_Management_System.Models.LendBook
  commentId: T:Library_Management_System.Models.LendBook
  parent: Library_Management_System.Models
  href: Library_Management_System.Models.LendBook.html
  name: LendBook
  nameWithType: LendBook
  fullName: Library_Management_System.Models.LendBook
- uid: Library_Management_System.BusinessLogic.LibraryManager.GetAvailableQuantity*
  commentId: Overload:Library_Management_System.BusinessLogic.LibraryManager.GetAvailableQuantity
  href: Library_Management_System.BusinessLogic.LibraryManager.html#Library_Management_System_BusinessLogic_LibraryManager_GetAvailableQuantity_Library_Management_System_Models_Book_
  name: GetAvailableQuantity
  nameWithType: LibraryManager.GetAvailableQuantity
  fullName: Library_Management_System.BusinessLogic.LibraryManager.GetAvailableQuantity
